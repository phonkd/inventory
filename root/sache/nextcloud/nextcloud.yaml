apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: nextcloud
spec:
  destination:
    name: ''
    namespace: nextcloud
    server: https://kubernetes.default.svc
  source:
    path: ''
    repoURL: https://nextcloud.github.io/helm/
    targetRevision: 5.5.6
    chart: nextcloud
    helm:
      values: |
        ## Official nextcloud image version
        ## ref: https://hub.docker.com/r/library/nextcloud/tags/
        ##
        image:
          repository: nextcloud
          flavor: fpm
          # default is generated by flavor and appVersion
          tag:
          pullPolicy: IfNotPresent

        # Number of replicas to be deployed
        replicaCount: 1

        ingress:
          enabled: true
          className: nginx
          annotations:
           nginx.ingress.kubernetes.io/proxy-body-size: 4G
          #  kubernetes.io/tls-acme: "true"
           cert-manager.io/cluster-issuer: letsencrypt-prod
          #  # Keep this in sync with the README.md:
           nginx.ingress.kubernetes.io/server-snippet: |-
             server_tokens off;
             proxy_hide_header X-Powered-By;
             rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
             rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
             rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
             rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
             location = /.well-known/carddav {
               return 301 $scheme://$host/remote.php/dav;
             }
             location = /.well-known/caldav {
               return 301 $scheme://$host/remote.php/dav;
             }
             location = /robots.txt {
               allow all;
               log_not_found off;
               access_log off;
             }
             location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
               deny all;
             }
             location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
               deny all;
             }
          tls:
            - secretName: nextcloud-tls
              hosts:
                - nextcloud.k8s.phonkd.net
          labels: {}
          path: /
          pathType: Prefix


        phpClientHttpsFix:
          enabled: false
          protocol: https

        nextcloud:
          host: nextcloud.k8s.phonkd.net
          username: admin
          password: eebo7Di7yaibeethugh4
          ## Use an existing secret
          existingSecret:
            enabled: true
            secretName: nc-creds
            usernameKey: nextcloud-username
            passwordKey: nextcloud-password
            tokenKey: nextcloud-token
            smtpUsernameKey: smtp-username
            smtpPasswordKey: smtp-password
            smtpHostKey: smtp-host
          update: 0
          # If web server is not binding default port, you can define it
          containerPort: 80
          datadir: /var/www/html/data
          persistence:
            subPath:
          mail:
            enabled: false
          phpConfigs: {}
          defaultConfigs:
            .htaccess: true
            redis.config.php: true
            apache-pretty-urls.config.php: true
            apcu.config.php: true
            apps.config.php: true
            autoconfig.php: true
            smtp.config.php: true
          configs: {}
          strategy:
            type: Recreate

        nginx:
          ## You need to set an fpm version of the image for nextcloud if you want to use nginx!
          enabled: true
          image:
            repository: nginx
            tag: alpine
            pullPolicy: IfNotPresent
          containerPort: 80
          config:
            default: true
        internalDatabase:
          enabled: false
          name: nextcloud

        ##
        ## External database configuration
        ##
        externalDatabase:
          enabled: true

          ## Supported database engines: mysql or postgresql
          type: postgresql

          ## Database host
          host: nextcloud-postgresql-hl

          ## Database user
          user: nextcloud

          ## Database password
          #password: ""

          ## Database name
          database: nextcloud

          ## Use a existing secret
          existingSecret:
            enabled: true
            secretName: pg-creds
            usernameKey: userpw
            passwordKey: adminpw

        mariadb:
          enabled: false

        postgresql:
          enabled: true
          global:
            postgresql:
              auth:
                username: nextcloud
                password: ex7Ahso0ir1cei6Iavia
                database: nextcloud
                existingSecret: "pg-creds"
                # Names of keys in existing secret to use for PostgreSQL credentials
                secretKeys:
                  adminPasswordKey: "adminpw"
                  userPasswordKey: "userpw"
                  #replicationPasswordKey: ""
          primary:
            persistence:
              enabled: true
              # Use an existing Persistent Volume Claim (must be created ahead of time)
              # existingClaim: ""
              storageClass: "longhorn"


        redis:
          enabled: true
          auth:
            enabled: true
            password: 'aegheiJeedoh4quoodi1'
            # name of an existing secret with RedisÂ® credentials (instead of auth.password), must be created ahead of time
            existingSecret: "redis-creds"
            # Password key to be retrieved from existing secret
            existingSecretPasswordKey: "redis-pw"

        cronjob:
          enabled: false
        service:
          type: ClusterIP
          port: 8080
          loadBalancerIP: ""

        persistence:
          enabled: true
          annotations: {}
          storageClass: "longhorn"

          accessMode: ReadWriteMany
          size: 8Gi

          nextcloudData:
            enabled: true
            subPath:
            annotations: {}
            storageClass: "longhorn"
            # existingClaim:
            accessMode: ReadWriteMany
            size: 50Gi

        ## Liveness and readiness probe values
        ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
        ##
        livenessProbe:
          enabled: true
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          enabled: true
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          enabled: false
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1

        hpa:
          enabled: false

        metrics:
          enabled: false
        rbac:
          enabled: false


        ## @param securityContext for nextcloud pod @deprecated Use `nextcloud.podSecurityContext` instead
        securityContext: {}

  sources: []
  project: default
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
